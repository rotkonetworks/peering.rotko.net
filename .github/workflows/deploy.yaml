name: "Dioxus Deploy"
description: "Deploy a Dioxus web application to GitHub Pages."
icon: "book"
color: "blue"

inputs:
  build-mode:
    description: "Build mode for the project [default: 'release']"
    required: false
    default: "release"
  toolchain:
    description: "Rust toolchain to use for building [default: 'stable']"
    required: false
    default: "stable"
  out-directory:
    description: "The `out_dir` property configured in Dioxus.toml [default: 'dist']"
    required: false
    default: "dist"
  root-path:
    description: "Source code root path [default: '.']"
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    # Checkout the repository
    - uses: actions/checkout@v3

    # Set up the Rust toolchain
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ inputs.toolchain }}
        profile: minimal
        target: wasm32-unknown-unknown
        override: true

    # Cache Rust dependencies to speed up builds
    - uses: Swatinem/rust-cache@v2

    # Install Dioxus CLI
    - name: Install Dioxus CLI
      shell: bash
      run: |
        set -euo pipefail
        cargo install dioxus-cli --locked

    # Build the Dioxus project
    - name: Build Project üéÅ
      shell: bash
      run: |
        set -euo pipefail
        cd "${{ inputs.root-path }}"
        dx build --${{ inputs.build-mode }}
        cp "./${{ inputs.out-directory }}/index.html" "./${{ inputs.out-directory }}/404.html"

    # Deploy to GitHub Pages
    - name: Deploy Project üöÄ
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: "${{ inputs.root-path }}/${{ inputs.out-directory }}"
        clean: false
